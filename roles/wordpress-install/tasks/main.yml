---
- include: directories.yml

- name: Create .env file
  template: src="env.j2"
            dest="/tmp/{{ item.key }}.env"
            owner="{{ web_user }}"
            group="{{ web_group }}"
  with_dict: wordpress_sites

- name: Copy .env file into web root
  command: rsync -ac --info=NAME /tmp/{{ item.key }}.env {{ www_root }}/{{ item.key }}/.env
  with_dict: wordpress_sites
  register: env

- name: Download WP Core
  command: wp core download --allow-root
  args:
    chdir: "{{ www_root }}/{{ item.key }}/"
    creates: "{{ www_root }}/{{ item.key }}/index.php"
  with_dict: wordpress_sites
  when: "{{ item.value.site_install | default(False) }} == True"

- name: Create wp-config.php
  command: |
            wp core config
            --allow-root
            --dbname="{{ item.value.env.db_name }}"
            --dbuser="{{ item.value.env.db_user }}"
            --dbpass="{{ item.value.env.db_password }}"
            --dbprefix="{{ item.value.env.db_prefix }}"
  args:
    chdir: "{{ www_root }}/{{ item.key }}/"
    creates: "{{ www_root }}/{{ item.key }}/wp-config.php"
  with_dict: wordpress_sites
  when: "{{ item.value.site_install | default(False) }} == True"

- name: Install WP
  command: wp core install
           --allow-root
           --url="{{ item.value.env.wp_home }}"
           --title="{{ item.value.site_title | default(item.key) }}"
           --admin_user="{{ item.value.admin_user }}"
           --admin_password="{{ item.value.admin_password }}"
           --admin_email="{{ item.value.admin_email }}"
  args:
    chdir: "{{ www_root }}/{{ item.key }}/"
  register: wp_install_results
  with_dict: wordpress_sites
  when: item.value.site_install == True and (item.value.multisite.enabled | default(False) == False)
  changed_when: "'WordPress is already installed.' not in wp_install_results.stdout"

- name: Install WP Multisite
  command: wp core multisite-install
           --allow-root
           --url="{{ item.value.env.wp_home }}"
           --base="{{ item.value.multisite.base_path | default('/') }}"
           --subdomains="{{ item.value.multisite.subdomains | default('false') }}"
           --title="{{ item.value.site_title | default(item.key) }}"
           --admin_user="{{ item.value.admin_user }}"
           --admin_password="{{ item.value.admin_password }}"
           --admin_email="{{ item.value.admin_email }}"
  args:
    chdir: "{{ www_root }}/{{ item.key }}/"
  register: wp_install_results
  with_dict: wordpress_sites
  when: item.value.site_install == True and (item.value.multisite.enabled | default(False) == True)
  changed_when: "'The network already exists.' not in wp_install_results.stdout"


- name: Restart HHVM
  service: name=hhvm state=restarted
  when: hhvm | default(False)
